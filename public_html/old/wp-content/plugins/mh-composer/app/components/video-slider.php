<?php 
class MHComposer_Component_Video_Slider extends MHComposer_Component {
	function init() {
		$this->name            = esc_html__( 'Video Slider', 'mh-composer' );
		$this->slug            = 'mhc_video_slider';
		$this->child_slug      = 'mhc_video_slider_item';
		$this->child_item_text = esc_html__( 'Add New Video', 'mh-composer' );

		$this->approved_fields = array(
			'show_image_overlay',
			'show_arrows',
			'show_thumbnails',
			'controls_color',
			'admin_label',
			'module_id',
			'module_class',
			'play_icon_color',
			'thumbnail_overlay_color',
			'pagination_style',
			'pagination_color',
		);

		$this->fields_defaults = array(
			'show_image_overlay' => array( 'hide' ),
			'show_arrows'        => array( 'on' ),
			'show_thumbnails'    => array( 'on' ),
			'pagination_style'	 => array( 'dots' ),
		);

		$this->custom_css_options = array(
			'video_play_icon' => array(
				'label'    => esc_html__( 'Play Button', 'mh-composer' ),
				'selector' => '.mhc_video_play',
			),
			'video_thumbnail_item' => array(
				'label'    => esc_html__( 'Thumbnail Item', 'mh-composer' ),
				'selector' => '.mhc_carousel_item',
			),
		);
	}

	function get_fields() {
		$fields = array(
			'show_image_overlay' => array(
				'label'           => esc_html__( 'Display Image Overlay on Main Video', 'mh-composer' ),
				'type'            => 'select',
				'options'         => array(
					'hide' => esc_html__( 'Hide', 'mh-composer' ),
					'show' => esc_html__( 'Show', 'mh-composer' ),
				),
				'description'        => esc_html__( 'This option will cover the player UI on the main video. This image can either be uploaded in each video setting or auto-generated by the theme.', 'mh-composer' ),
			),
			'show_arrows' => array(
				'label'           => esc_html__( 'Show Arrows', 'mh-composer' ),
				'type'            => 'select',
				'options'         => array(
					'on'  => esc_html__( 'Yes', 'mh-composer' ),
					'off' => esc_html__( 'No', 'mh-composer' ),
				),
				'description'        => esc_html__( 'This setting will turn on and off the navigation arrows.', 'mh-composer' ),
			),
			'show_thumbnails' => array(
				'label'             => esc_html__( 'Slider Controls', 'mh-composer' ),
				'type'              => 'select',
				'options'           => array(
					'on'  => esc_html__( 'Use Thumbnail Track', 'mh-composer' ),
					'off' => esc_html__( 'Use Dot Navigation', 'mh-composer' ),
				),
				'description'        => esc_html__( 'This setting will let you choose to use the thumbnail track controls below the slider or dot navigation at the bottom of the slider.', 'mh-composer' ),
				'affects' => array(
					'#mhc_thumbnail_overlay_color',
					'#mhc_pagination_style',
					'#mhc_pagination_color',
				),
			),
			'controls_color' => array(
				'label'             => esc_html__( 'Slider Controls Colour', 'mh-composer' ),
				'type'              => 'select',
				'options'           => array(
					'light' => esc_html__( 'Light', 'mh-composer' ),
					'dark'  => esc_html__( 'Dark', 'mh-composer' ),
				),
				'description'       => esc_html__( 'This setting will make your slider arrows either light or dark in colour.', 'mh-composer' ),
			),
			'admin_label' => array(
				'label'       => esc_html__( 'Label', 'mh-composer' ),
				'type'        => 'text',
				'description' => esc_html__( 'This will change the label of the component in the composer for easy identification.', 'mh-composer' ),
			),
			'module_id' => array(
				'label'           => esc_html__( '{CSS ID}', 'mh-composer' ),
				'type'            => 'text',
				'description'     => esc_html__( 'Enter an optional CSS ID. An ID can be used to create custom CSS styling, or to create links to particular sections of your page.', 'mh-composer' ),
				'tab_slug'          => 'advanced',
			),
			'module_class' => array(
				'label'           => esc_html__( '{CSS Class}', 'mh-composer' ),
				'type'            => 'text',
				'description'     => esc_html__( 'Enter optional CSS classes. A CSS class can be used to create custom CSS styling. You can add multiple classes, separated with a space.', 'mh-composer' ),
				'tab_slug'          => 'advanced',
			),
			'play_icon_color' => array(
				'label'             => esc_html__( 'Play Icon Colour', 'mh-composer' ),
				'type'              => 'color',
				'custom_color'      => true,
				'tab_slug'          => 'advanced',
			),
			'thumbnail_overlay_color' => array(
				'label'             => esc_html__( 'Thumbnail Overlay Colour', 'mh-composer' ),
				'type'              => 'color-alpha',
				'depends_show_if'   => 'on',
				'custom_color'      => true,
				'tab_slug'          => 'advanced',
			),
			'pagination_style' => array(
				'label'           => esc_html__( 'Pagination Style', 'mh-composer' ),
				'type'            => 'select',
				'options'         => array(
					'dots' => esc_html__( 'Dots', 'mh-composer' ),
					'lines'  => esc_html__( 'Lines', 'mh-composer' ),
				),
				'depends_show_if'   => 'off',
				'description'       => esc_html__( 'Define the style for the pagination.', 'mh-composer' ),
				'tab_slug'          => 'advanced',
			),
			'pagination_color' => array(
				'label'           => esc_html__( 'Pagination Colour', 'mh-composer' ),
				'type'              => 'color-alpha',
				'depends_show_if'   => 'off',
				'description'       => esc_html__( 'Here you can define a custom colour for the arrows and pagination.', 'mh-composer' ),
				'tab_slug'          => 'advanced',
				'custom_color' => true,
			),
			'disabled_on' => array(
				'label'           => esc_html__( 'Hide on', 'mh-composer' ),
				'type'            => 'multiple_checkboxes',
				'options'         => array(
					'phone'   => esc_html__( 'Phone', 'mh-composer' ),
					'tablet'  => esc_html__( 'Tablet', 'mh-composer' ),
					'desktop' => esc_html__( 'Desktop', 'mh-composer' ),
				),
				'additional_att'  => 'disable_on',
				'description'     => esc_html__( 'This will hide the component on selected devices', 'mh-composer' ),
				'tab_slug'        => 'advanced',
			),
		);
		return $fields;
	}

	function pre_shortcode_content() {
		global $mhc_slider_image_overlay;

		$show_image_overlay = $this->shortcode_atts['show_image_overlay'];

		$mhc_slider_image_overlay = $show_image_overlay;

	}

	function shortcode_callback( $atts, $content = null, $function_name ) {
		$module_id          = $this->shortcode_atts['module_id'];
		$module_class       = $this->shortcode_atts['module_class'];
		$show_arrows        = $this->shortcode_atts['show_arrows'];
		$show_thumbnails    = $this->shortcode_atts['show_thumbnails'];
		$controls_color     = $this->shortcode_atts['controls_color'];
		$play_icon_color 	= $this->shortcode_atts['play_icon_color'];
		$thumbnail_overlay_color = $this->shortcode_atts['thumbnail_overlay_color'];
		$pagination_style 	= $this->shortcode_atts['pagination_style'];
		$pagination_color 	= $this->shortcode_atts['pagination_color'];

		global $mhc_slider_image_overlay;

		$module_class = MHComposer_Core::add_module_order_class( $module_class, $function_name );

		if ( '' !== $play_icon_color ) {
			MHComposer_Core::set_style( $function_name, array(
				'selector'    => '%%order_class%% .mhc_video_play, %%order_class%% .mhc_carousel .mhc_video_play',
				'declaration' => sprintf(
					'color: %1$s !important;',
					esc_html( $play_icon_color )
				),
			) );
		}

		if ( '' !== $thumbnail_overlay_color ) {
			MHComposer_Core::set_style( $function_name, array(
				'selector'    => '%%order_class%% .mhc_carousel_item .mhc_video_overlay_hover:hover, %%order_class%%.mhc_video_slider .mhc_slider:hover .mhc_video_overlay_hover, %%order_class%% .mhc_carousel_item.mhc-active-control .mhc_video_overlay_hover',
				'declaration' => sprintf(
					'background-color: %1$s;',
					esc_html( $thumbnail_overlay_color )
				),
			) );
		}
		
		if ( 'lines' === $pagination_style ) {
			MHComposer_Component::set_style( $function_name, array(
				'selector'    => '%%order_class%% .mhc-controllers a',
				'declaration' => 'width:30px; height:7px;',
			) );
		}
		
		if ( '' !== $pagination_color ) {
			MHComposer_Component::set_style( $function_name, array(
				'selector'    => '%%order_class%% .mhc-arrow-next, %%order_class%% .mhc-arrow-prev',
				'declaration' => sprintf(
					'color:%1$s !important;',
				esc_html( $pagination_color ))
			) );
			MHComposer_Component::set_style( $function_name, array(
				'selector'    => '%%order_class%% .mhc-controllers a',
				'declaration' => sprintf(
					'background-color:%1$s !important; opacity:0.5;',
				esc_html( $pagination_color ))
			) );
			MHComposer_Component::set_style( $function_name, array(
				'selector'    => '%%order_class%% .mhc_slider_dots.mhc_controls_dark ~ .mhc-controllers .mhc-active-control, %%order_class%% .mhc_slider_dots.mhc_controls_light ~ .mhc-controllers .mhc-active-control',
				'declaration' => sprintf(
					'background-color:%1$s !important; opacity:1;',
				esc_html( $pagination_color ))
			) );
		}

		$class  = '';
		$class .= 'off' === $show_arrows ? ' mhc_slider_no_arrows' : '';
		$class .= 'on' === $show_thumbnails ? ' mhc_slider_carousel mhc_slider_no_pagination' : '';
		$class .= 'off' === $show_thumbnails ? ' mhc_slider_dots' : '';
		$class .= " mhc_controls_{$controls_color}";
		$class .= 'lines' === $pagination_style ? ' mhc_controllers_corners' : '';

		$content = $this->shortcode_content;

		$output = sprintf(
			'<div%3$s class="mhc_module mhc_video_slider%4$s">
				<div class="mhc_slider mhc_preload%1$s">
					<div class="mhc_slides">
						%2$s
					</div> <!-- .mhc_slides -->
				</div> <!-- .mhc_slider -->
			</div> <!-- .mhc_video_slider -->
			',
			esc_attr( $class ),
			$content,
			( '' !== $module_id ? sprintf( ' id="%1$s"', esc_attr( $module_id ) ) : '' ),
			( '' !== $module_class ? sprintf( ' %1$s', esc_attr( $module_class ) ) : '' )
		);

		return $output;
	}
}
new MHComposer_Component_Video_Slider;

class MHComposer_Component_Video_Slider_Item extends MHComposer_Component {
	function init() {
		$this->name                        = esc_html__( 'Video', 'mh-composer' );
		$this->slug                        = 'mhc_video_slider_item';
		$this->type                        = 'child';
		$this->child_title_var             = 'admin_title';
		$this->advanced_setting_title_text = esc_html__( 'New Video', 'mh-composer' );
		$this->settings_text               = esc_html__( 'Video Settings', 'mh-composer' );
		$this->custom_css_tab              = false;

		$this->approved_fields = array(
			'admin_title',
			'src',
			'src_webm',
			'image_src',
			'background_layout',
		);

		$this->fields_defaults = array(
			'background_layout' => array( 'dark' ),
		);
	}

	function get_fields() {
		$fields = array(
			'admin_title' => array(
				'label'       => esc_html__( 'Label', 'mh-composer' ),
				'type'        => 'text',
				'description' => esc_html__( 'This will change the label of the component in the composer for easy identification.', 'mh-composer' ),
			),
			'src' => array(
				'label'              => esc_html__( 'Video MP4/URL', 'mh-composer' ),
				'type'               => 'upload',
				'data_type'          => 'video',
				'upload_button_text' => esc_attr__( 'Upload a video', 'mh-composer' ),
				'choose_text'        => esc_attr__( 'Choose a Video MP4 File', 'mh-composer' ),
				'update_text'        => esc_attr__( 'Set As Video', 'mh-composer' ),
				'description'        => esc_html__( 'Upload your desired video in .MP4 format, or type in the URL to the video you would like to display', 'mh-composer' ),
			),
			'src_webm' => array(
				'label'              => esc_html__( 'Video WEBM', 'mh-composer' ),
				'type'               => 'upload',
				'data_type'          => 'video',
				'upload_button_text' => esc_attr__( 'Upload a video', 'mh-composer' ),
				'choose_text'        => esc_attr__( 'Choose a Video WEBM File', 'mh-composer' ),
				'update_text'        => esc_attr__( 'Set As Video', 'mh-composer' ),
				'description'        => esc_html__( 'Upload the .WEBM version of your video here. All uploaded videos should be in both .MP4 and .WEBM formats to ensure maximum compatibility in all browsers.', 'mh-composer' ),
			),
			'image_src' => array(
				'label'              => esc_html__( 'Image Overlay URL', 'mh-composer' ),
				'type'               => 'upload',
				'upload_button_text' => esc_attr__( 'Upload an image', 'mh-composer' ),
				'choose_text'        => esc_attr__( 'Choose an Image', 'mh-composer' ),
				'update_text'        => esc_attr__( 'Set As Image', 'mh-composer' ),
				'additional_button'  => sprintf(
					'<input type="button" class="button mhc-video-image-button" value="%1$s" />',
					esc_attr__( 'Generate From Video', 'mh-composer' )
				),
				'classes'            => 'mhc_video_overlay',
				'description'        => esc_html__( 'Upload your desired image, or type in the URL to the image you would like to display over your video. You can also generate a still image from your video.', 'mh-composer' ),
			),
			'background_layout' => array(
				'label'           => esc_html__( 'Slider Arrows Colour', 'mh-composer' ),
				'type'            => 'select',
				'options'         => array(
					'dark'  => esc_html__( 'Light', 'mh-composer' ),
					'light' => esc_html__( 'Dark', 'mh-composer' ),
				),
				'description' => esc_html__( 'This setting will make your slider arrows either light or dark in colour.', 'mh-composer' ),
			),
		);
		return $fields;
	}

	function shortcode_callback( $atts, $content = null, $function_name ) {
		$src               = $this->shortcode_atts['src'];
		$src_webm          = $this->shortcode_atts['src_webm'];
		$image_src         = $this->shortcode_atts['image_src'];
		$background_layout = $this->shortcode_atts['background_layout'];
		$video_src         = '';

		global $mhc_slider_image_overlay;

		$class  = '';
		$class .= " mhc_bg_layout_{$background_layout}";

		if ( '' !== $image_src ) {
			$image_overlay_output = mhc_set_video_oembed_thumbnail_resolution( $image_src, 'high' );
			$thumbnail_track_output = $image_src;
		} else {
			$image_overlay_output = '';
			if ( false !== mhc_check_oembed_provider( esc_url( $src ) ) ) {
				add_filter( 'oembed_dataparse', 'mhc_video_oembed_data_parse', 10, 3 );
				// Save thumbnail
				$thumbnail_track_output = wp_oembed_get( esc_url( $src ) );
				// Set back to normal
				remove_filter( 'oembed_dataparse', 'mhc_video_oembed_data_parse', 10, 3 );
			} else {
				$thumbnail_track_output = '';
			}
		}

		if ( '' !== $src ) {
			if ( false !== mhc_check_oembed_provider( esc_url( $src ) ) ) {
				$video_src = wp_oembed_get( esc_url( $src ) );
			} else {
				$video_src = sprintf( '
					<video controls>
						%1$s
						%2$s
					</video>',
					( '' !== $src ? sprintf( '<source type="video/mp4" src="%s" />', esc_url( $src ) ) : '' ),
					( '' !== $src_webm ? sprintf( '<source type="video/webm" src="%s" />', esc_url( $src_webm ) ) : '' )
				);

				wp_enqueue_style( 'wp-mediaelement' );
				wp_enqueue_script( 'wp-mediaelement' );
			}
		}

		$video_output = sprintf(
			'<div class="mhc_video_wrap">
				<div class="mhc_video_box">
					%1$s
				</div>
				%2$s
			</div>',
			( '' !== $video_src ? $video_src : '' ),
			(
				( '' !== $image_overlay_output && $mhc_slider_image_overlay == 'show' )
					? sprintf(
						'<div class="mhc_video_overlay" style="background-image: url(%1$s);">
							<div class="mhc_video_overlay_hover">
								<a href="#" class="mhc_video_play"></a>
							</div>
						</div>',
						esc_attr( $image_overlay_output )
					)
					: ''
			)
		);

		$output = sprintf(
			'<div class="mhc_slide%1$s"%3$s>
				%2$s
			</div> <!-- .mhc_slide -->
			',
			esc_attr( $class ),
			( '' !== $video_output ? $video_output : '' ),
			( '' !== $thumbnail_track_output ? sprintf( ' data-image="%1$s"', esc_attr( $thumbnail_track_output ) ) : '' )
		);

		return $output;
	}
}
new MHComposer_Component_Video_Slider_Item;